/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthenticatedRouteRouteImport } from './routes/_unauthenticated/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as UnauthenticatedSigninRouteImport } from './routes/_unauthenticated/signin'
import { Route as UnauthenticatedForgotPasswordRouteImport } from './routes/_unauthenticated/forgot-password'
import { Route as AuthenticatedSuccessRouteImport } from './routes/_authenticated/success'
import { Route as UnauthenticatedSignupIndexRouteImport } from './routes/_unauthenticated/signup/index'
import { Route as AuthenticatedSchoolsIndexRouteImport } from './routes/_authenticated/schools/index'
import { Route as UnauthenticatedSignupSuccessRouteImport } from './routes/_unauthenticated/signup/success'
import { Route as AuthenticatedSchoolsSchoolSlugIndexRouteImport } from './routes/_authenticated/schools/$schoolSlug/index'
import { Route as AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRouteImport } from './routes/_authenticated/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'
import { ServerRoute as ApiAttachmentsKeyServerRouteImport } from './routes/api/attachments/$key'

const rootServerRouteImport = createServerRootRoute()

const UnauthenticatedRouteRoute = UnauthenticatedRouteRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const UnauthenticatedSigninRoute = UnauthenticatedSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => UnauthenticatedRouteRoute,
} as any)
const UnauthenticatedForgotPasswordRoute =
  UnauthenticatedForgotPasswordRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const AuthenticatedSuccessRoute = AuthenticatedSuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const UnauthenticatedSignupIndexRoute =
  UnauthenticatedSignupIndexRouteImport.update({
    id: '/signup/',
    path: '/signup/',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const AuthenticatedSchoolsIndexRoute =
  AuthenticatedSchoolsIndexRouteImport.update({
    id: '/schools/',
    path: '/schools/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const UnauthenticatedSignupSuccessRoute =
  UnauthenticatedSignupSuccessRouteImport.update({
    id: '/signup/success',
    path: '/signup/success',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const AuthenticatedSchoolsSchoolSlugIndexRoute =
  AuthenticatedSchoolsSchoolSlugIndexRouteImport.update({
    id: '/schools/$schoolSlug/',
    path: '/schools/$schoolSlug/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute =
  AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRouteImport.update(
    {
      id: '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/',
      path: '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/',
      getParentRoute: () => AuthenticatedRouteRoute,
    } as any,
  )
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAttachmentsKeyServerRoute = ApiAttachmentsKeyServerRouteImport.update({
  id: '/api/attachments/$key',
  path: '/api/attachments/$key',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/success': typeof AuthenticatedSuccessRoute
  '/forgot-password': typeof UnauthenticatedForgotPasswordRoute
  '/signin': typeof UnauthenticatedSigninRoute
  '/': typeof AuthenticatedIndexRoute
  '/signup/success': typeof UnauthenticatedSignupSuccessRoute
  '/schools': typeof AuthenticatedSchoolsIndexRoute
  '/signup': typeof UnauthenticatedSignupIndexRoute
  '/schools/$schoolSlug': typeof AuthenticatedSchoolsSchoolSlugIndexRoute
  '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug': typeof AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute
}
export interface FileRoutesByTo {
  '/success': typeof AuthenticatedSuccessRoute
  '/forgot-password': typeof UnauthenticatedForgotPasswordRoute
  '/signin': typeof UnauthenticatedSigninRoute
  '/': typeof AuthenticatedIndexRoute
  '/signup/success': typeof UnauthenticatedSignupSuccessRoute
  '/schools': typeof AuthenticatedSchoolsIndexRoute
  '/signup': typeof UnauthenticatedSignupIndexRoute
  '/schools/$schoolSlug': typeof AuthenticatedSchoolsSchoolSlugIndexRoute
  '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug': typeof AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteRouteWithChildren
  '/_authenticated/success': typeof AuthenticatedSuccessRoute
  '/_unauthenticated/forgot-password': typeof UnauthenticatedForgotPasswordRoute
  '/_unauthenticated/signin': typeof UnauthenticatedSigninRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_unauthenticated/signup/success': typeof UnauthenticatedSignupSuccessRoute
  '/_authenticated/schools/': typeof AuthenticatedSchoolsIndexRoute
  '/_unauthenticated/signup/': typeof UnauthenticatedSignupIndexRoute
  '/_authenticated/schools/$schoolSlug/': typeof AuthenticatedSchoolsSchoolSlugIndexRoute
  '/_authenticated/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/': typeof AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/success'
    | '/forgot-password'
    | '/signin'
    | '/'
    | '/signup/success'
    | '/schools'
    | '/signup'
    | '/schools/$schoolSlug'
    | '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/success'
    | '/forgot-password'
    | '/signin'
    | '/'
    | '/signup/success'
    | '/schools'
    | '/signup'
    | '/schools/$schoolSlug'
    | '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/success'
    | '/_unauthenticated/forgot-password'
    | '/_unauthenticated/signin'
    | '/_authenticated/'
    | '/_unauthenticated/signup/success'
    | '/_authenticated/schools/'
    | '/_unauthenticated/signup/'
    | '/_authenticated/schools/$schoolSlug/'
    | '/_authenticated/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/attachments/$key': typeof ApiAttachmentsKeyServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/attachments/$key': typeof ApiAttachmentsKeyServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/attachments/$key': typeof ApiAttachmentsKeyServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/attachments/$key' | '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/attachments/$key' | '/api/auth/$'
  id: '__root__' | '/api/attachments/$key' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAttachmentsKeyServerRoute: typeof ApiAttachmentsKeyServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_unauthenticated/signin': {
      id: '/_unauthenticated/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof UnauthenticatedSigninRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/forgot-password': {
      id: '/_unauthenticated/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof UnauthenticatedForgotPasswordRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_authenticated/success': {
      id: '/_authenticated/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof AuthenticatedSuccessRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_unauthenticated/signup/': {
      id: '/_unauthenticated/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnauthenticatedSignupIndexRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_authenticated/schools/': {
      id: '/_authenticated/schools/'
      path: '/schools'
      fullPath: '/schools'
      preLoaderRoute: typeof AuthenticatedSchoolsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_unauthenticated/signup/success': {
      id: '/_unauthenticated/signup/success'
      path: '/signup/success'
      fullPath: '/signup/success'
      preLoaderRoute: typeof UnauthenticatedSignupSuccessRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_authenticated/schools/$schoolSlug/': {
      id: '/_authenticated/schools/$schoolSlug/'
      path: '/schools/$schoolSlug'
      fullPath: '/schools/$schoolSlug'
      preLoaderRoute: typeof AuthenticatedSchoolsSchoolSlugIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/': {
      id: '/_authenticated/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug/'
      path: '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug'
      fullPath: '/schools/$schoolSlug/$courseSlug/$chapterSlug/$lectureSlug'
      preLoaderRoute: typeof AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/attachments/$key': {
      id: '/api/attachments/$key'
      path: '/api/attachments/$key'
      fullPath: '/api/attachments/$key'
      preLoaderRoute: typeof ApiAttachmentsKeyServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSuccessRoute: typeof AuthenticatedSuccessRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSchoolsIndexRoute: typeof AuthenticatedSchoolsIndexRoute
  AuthenticatedSchoolsSchoolSlugIndexRoute: typeof AuthenticatedSchoolsSchoolSlugIndexRoute
  AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute: typeof AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSuccessRoute: AuthenticatedSuccessRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSchoolsIndexRoute: AuthenticatedSchoolsIndexRoute,
  AuthenticatedSchoolsSchoolSlugIndexRoute:
    AuthenticatedSchoolsSchoolSlugIndexRoute,
  AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute:
    AuthenticatedSchoolsSchoolSlugCourseSlugChapterSlugLectureSlugIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedForgotPasswordRoute: typeof UnauthenticatedForgotPasswordRoute
  UnauthenticatedSigninRoute: typeof UnauthenticatedSigninRoute
  UnauthenticatedSignupSuccessRoute: typeof UnauthenticatedSignupSuccessRoute
  UnauthenticatedSignupIndexRoute: typeof UnauthenticatedSignupIndexRoute
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedForgotPasswordRoute: UnauthenticatedForgotPasswordRoute,
  UnauthenticatedSigninRoute: UnauthenticatedSigninRoute,
  UnauthenticatedSignupSuccessRoute: UnauthenticatedSignupSuccessRoute,
  UnauthenticatedSignupIndexRoute: UnauthenticatedSignupIndexRoute,
}

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAttachmentsKeyServerRoute: ApiAttachmentsKeyServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
